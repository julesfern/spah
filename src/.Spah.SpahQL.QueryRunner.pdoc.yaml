---
id: "Spah.SpahQL.QueryRunner"
parent_id: "Spah.SpahQL"
type: class
line_number: 9
description: |
  Class responsible for executing parsed <code>Spah.SpahQL.Query</code> queries and returning sets
  of <code>Spah.SpahQL</code> instances.
  
  Unless you're spelunking or fixing bugs, the only methods you care about are _select_ and _assert_.

file: /home/danski/projects/spah/src/Spah.SpahQL.QueryRunner.js

---
id: "Spah.SpahQL.QueryRunner.select"
parent_id: "Spah.SpahQL.QueryRunner"
type: class method
line_number: 22
description: |
  Executes a selection query against the given dataset. Returns an array of result instances.

signatures:
 -
  signature: "Spah.SpahQL.QueryRunner.select(query, rootData[,scopeData][, scopePath])"
  return_value: "Array"
arguments:
 -
  name: rootData
  types: [Object]
  description: >
    The root data context against which to run the query

 -
  name: scopeData
  types: [Object]
  description: >
    An optional additional data context which will be the local scope for this query. If not set, will be set internally to <code>rootData</code>.

 -
  name: scopePath
  types: [String]
  description: >
    An optional path indicating the scope to which this query has been restricted.

file: /home/danski/projects/spah/src/Spah.SpahQL.QueryRunner.js

---
id: "Spah.SpahQL.QueryRunner.assert"
parent_id: "Spah.SpahQL.QueryRunner"
type: class method
line_number: 40
description: |
  Executes and ssserts the truthiness of a selection or assertion query against the given dataset.
  Returns a boolean indicating the overall result of the query - if the query is not an assertion
  query, it will return true if the query returns one or more results.

signatures:
 -
  signature: "Spah.SpahQL.QueryRunner.assert(query, rootData[, scopeData][, scopePath])"
  return_value: "Boolean result"
arguments:
 -
  name: query
  types: [Spah.SpahQL.Query]
  description: >
    A parsed query instance

 -
  name: rootData
  types: [Object]
  description: >
    The root data context against which to run the query

 -
  name: scopeData
  types: [Object]
  description: >
    An optional additional data context which will be the local scope for this query. If not set, will be set internally to <code>rootData</code>.

 -
  name: scopePath
  types: [String]
  description: >
    An optional path indicating the scope to which this query has been restricted.

file: /home/danski/projects/spah/src/Spah.SpahQL.QueryRunner.js

---
id: "Spah.SpahQL.QueryRunner.evalAssertion"
parent_id: "Spah.SpahQL.QueryRunner"
type: class method
line_number: 59
description: |
  Executes an assertion query. If the secondary token is null, then the primary token will be evaluated and the assertion
  will be successful (returning true) if the primary resultset contains one or more "truthy" values (i.e. if it is not simply
  full of nulls and/or false values). If the secondary token is provided, then the two tokens will be evaluated and their
  result sets compared using the provided operator.

signatures:
 -
  signature: "Spah.SpahQL.QueryRunner.evalAssertion(primaryToken, secondaryToken, comparisonOperator, rootData, scopeData, scopePath)"
  return_value: "Boolean result"
arguments:
 -
  name: primaryToken
  types: [Object]
  description: >
    A selection query or set literal token as delivered by the query parser.

 -
  name: secondaryToken
  types: [Object]
  description: >
    A selection query or set literal token as delivered by the query parser. May be null.

 -
  name: comparisonOperator
  types: [String]
  description: >
    The comparison operator that will be used to compare the primary and secondary result sets.

 -
  name: rootData
  types: [Object]
  description: >
    A root data context for any selection queries that appear in the literal

 -
  name: scopeData
  types: [Object]
  description: >
    A scoped data context for the scope at which selection queries in the set will be evaluated.

 -
  name: scopePath
  types: [String]
  description: >
    An optional path indicating the scope to which this query has been restricted.

file: /home/danski/projects/spah/src/Spah.SpahQL.QueryRunner.js