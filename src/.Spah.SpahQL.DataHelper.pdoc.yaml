---
id: "Spah.SpahQL.DataHelper"
parent_id: "Spah.SpahQL"
type: class
line_number: 7
description: |
  This is a singleton helper dedicated to deep-merging complex JSON structures and returning both
  the merged data and a digest of modified paths within the structure.

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.merge"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 51
description: |
  Merges the given objects and returns an object like:
  
       {
         data: updatedObject,
         modifications: modificationsKeyedByPath,
         modified: booleanIndicatingChangesWereMade
       }
  
  For instance:
  
       var originalState = {
         user_authenticated: true,
         items: [{type: "Item", id: 1}, {type: "Item", id: 2}],
         user: {id: 9, name: "My user"}
       }
       var delta = {
         items: [{type: "Item", id: 1}],
         user: {name: "User got a new name"}
       }
       mergeResult = Spah.SpahQL.DataHelper.merge(delta, originalState);
       mergeResult.data; //-> The merged data: {
       //  user_authenticated: true,
       //  items: [{type: "Item", id: 888}], // Note that arrays are REPLACED during a merge
       //  user: {id: 9, name: "User got a new name"} // Note hashes are MERGED during a merge
       //}
       mergeResult.modifications; //-> Modifications: {
       //  "/items": "~", // The "items" array was altered
       //  "/items[1]": "-", // The "items" array was shortened
       //  "/items[1]/type": "-", // The hash inside the array was deleted
       //  "/items[1]/id": "-",
       //  "/user": "~", // Value inside "/user" was modified
       //  "/user/name": "~" // User's name was modified
       //}

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.merge(delta, target [, path])"
  return_value: "Object mergeData"
arguments:
 -
  name: delta
  types: [Object]
  description: >
    The source object containing deltas intended to be written into the destination object.

 -
  name: target
  types: [Object]
  description: >
    The destination object for the updated data.

 -
  name: path
  types: [String]
  description: >
    A path used in recursion to collect modifications and act as a stack tracer.

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.modificationSymbol"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 333
description: |
  Determines whether the change between two objects, assuming content inequality, is a "+" (addition), "-" (nullification) or "~" (alteration).

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.modificationSymbol(delta, target)"
  return_value: "String symbol"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.objectType"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 344
description: |
  Extends the core typeof(obj) function by adding types "array" and "null".

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.objectType(obj)"
  return_value: "String type"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eq"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 361
description: |
  Determines content equality of two or more objects. Booleans, null values, numbers and strings are compared using
  the <code>Spah.SpahQL.DataHelper.objectType</code> method and the built-in <code>==</code> operator, but arrays
  and hashes are traversed recursively and have their values compared.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eq(obj1, obj2[, objN])"
  return_value: "Boolean equality result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqHash"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 389
description: |
  Compares two or more associative arrays for equality, enforcing strict key matching.
  Values are compared using the "eq" method.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqHash(obj1, obj2[, objN])"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqArray"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 413
description: |
  Compares two or more arrays for equality, enforcing strict ordering.
  Values are compared using the "eq" method.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqArray(obj1, obj2[, objN])"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.hashKeys"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 439
description: |
  Compares two or more values of any type under simple javascript equality rules.
  All arguments must be strictly equal or the function will return false.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.hashKeys(obj1, obj2[, objN])"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.hashKeys"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 457
description: |
  Retrieves all keys found in an associative array and returns them as an array
  without the corresponding values.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.hashKeys(hash)"
  return_value: "Array of keys"
arguments:
 -
  name: hash
  types: [Object]
  description: >
    The hash being exploded

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.hashValues"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 472
description: |
  Retrieves all values found in an associative array and returns them as an array
  without keys. Uniqueness is not enforced.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.hashValues(hash)"
  return_value: "Array of values"
arguments:
 -
  name: hash
  types: [Object]
  description: >
    The hash being exploded

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.mathGte"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 488
description: |
  - left (Object, Array, Boolean, String, Number, null): The value at the left-hand side of the comparator
  - right (Object, Array, Boolean, String, Number, null): The value at the right-hand side of the comparator
  
  Compares two objects of any type under the rules of Spah comparisons, returning true if the left value is
  greater than or equal to to the right value.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.mathGte(left, right)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.mathGt"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 500
description: |
  - left (Object, Array, Boolean, String, Number, null): The value at the left-hand side of the comparator
  - right (Object, Array, Boolean, String, Number, null): The value at the right-hand side of the comparator
  
  Compares two objects of any type under the rules of Spah comparisons, returning true if the left value is
  greater than to the right value.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.mathGt(left, right)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.mathLte"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 512
description: |
  - left (Object, Array, Boolean, String, Number, null): The value at the left-hand side of the comparator
  - right (Object, Array, Boolean, String, Number, null): The value at the right-hand side of the comparator
  
  Compares two objects of any type under the rules of Spah comparisons, returning true if the left value is
  less than or equal to the right value.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.mathLte(left, right)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.mathLt"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 524
description: |
  - left (Object, Array, Boolean, String, Number, null): The value at the left-hand side of the comparator
  - right (Object, Array, Boolean, String, Number, null): The value at the right-hand side of the comparator
  
  Compares two objects of any type under the rules of Spah comparisons, returning true if the left value is
  less than the right value.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.mathLt(left, right)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.mathCompare"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 539
description: |
  - left (Object, Array, Boolean, String, Number, null): The value at the left-hand side of the comparator
  - right (Object, Array, Boolean, String, Number, null): The value at the right-hand side of the comparator
  - callback (Function): A callback function which will be evaluating the mathematical comparison.
  
  Compares two objects of any type under the rules of Spah comparisons - both objects must be the same type,
  and no type coercion will take place. The given callback function should accept two values as an argument and return the comparison result.
  
  Mostly used as a refactoring tool to wrap the global math comparison rules.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.mathCompare(left, right, callback)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 555
description: |
  - left (Object, Array, Boolean, String, Number, null): The value at the left-hand side of the comparator
  - right (Object, Array, Boolean, String, Number, null): The value at the right-hand side of the comparator
  
  Compares two objects under the rules of rough equality. See readme for details.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqRough(left, right)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqStringRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 592
description: |
  Compares two strings under the rules of rough equality. The right-hand value is parsed as a RegExp
  and a result of true is returned if the left value matches it.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqStringRough(left, right)"
  return_value: "Boolean result"
arguments:
 -
  name: left
  types: [String]
  description: >
    The value at the left-hand side of the comparator

 -
  name: right
  types: [String]
  description: >
    The value at the right-hand side of the comparator

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqNumberRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 603
description: |
  Compares two numbers for equality using integer accuracy only.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqNumberRough(left, right)"
  return_value: "Boolean result"
arguments:
 -
  name: left
  types: [Number]
  description: >
    The value at the left-hand side of the comparator

 -
  name: right
  types: [Number]
  description: >
    The value at the right-hand side of the comparator

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqArrayRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 615
description: |
  Compares two arrays under the rules of rough equality. A result of true
  is returned if the arrays are joint sets, containing any two equal values.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqArrayRough(left, right)"
  return_value: "Boolean result"
arguments:
 -
  name: left
  types: [Array]
  description: >
    The value at the left-hand side of the comparator

 -
  name: right
  types: [Array]
  description: >
    The value at the right-hand side of the comparator

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqHashRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 627
description: |
  Compares two objects under the rules of rough equality. A result of true
  is returned if the hashes are joint sets, containing any two equal values at the same key.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqHashRough(left, right)"
  return_value: "Boolean result"
arguments:
 -
  name: left
  types: [Object]
  description: >
    The value at the left-hand side of the comparator

 -
  name: right
  types: [Object]
  description: >
    The value at the right-hand side of the comparator

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqBooleanRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 642
description: |
  - left (Boolean, null): The value at the left-hand side of the comparator
  - right (Boolean, null): The value at the right-hand side of the comparator
  
  Compares two boolean-type objects under the rules of rough equality. A result of true
  is returned if both values are truthy or if both values evaluate to false.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqBooleanRough(left, right)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqSetStrict"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 655
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets under the rules of strict equality. A result of true
  is returned if both sets have a 1:1 relationship of values. The values
  do not have to appear in the same order.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqSetStrict(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.eqSetRough"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 680
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets under the rules of rough equality. A result of true
  is returned if any value in the left-hand set is roughly equal to any
  value in the right-hand set.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.eqSetRough(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.jointSet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 692
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets and returns a result of true if any value in the left-hand
  set is strictly equal to any value from the right-hand set.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.jointSet(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.gteSet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 704
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets and returns a result of true if any value in the left-hand
  set is greater than or equal to any value from the right-hand set.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.gteSet(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.lteSet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 716
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets and returns a result of true if any value in the left-hand
  set is less than or equal to any value from the right-hand set.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.lteSet(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.gtSet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 728
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets and returns a result of true if any value in the left-hand
  set is greater than any value from the right-hand set.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.gtSet(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.ltSet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 740
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  
  Compares two sets and returns a result of true if any value in the left-hand
  set is less than any value from the right-hand set.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.ltSet(set1, set2)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.jointSetWithCallback"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 756
description: |
  - set1 (Array): The value at the left-hand side of the comparator
  - set2 (Array): The value at the right-hand side of the comparator
  - callback (Function): A function to be used for comparing the values. Should accept two values as arguments.
  
  Iterates over both sets such that every combination of values from the two is passed to the callback function
  for comparison. If the callback function at any point returns true, the method exits and returns true. Once
  all combinations have been exhausted and no matches are found, false will be returned.
  
  Mostly used to refactor the various joint set methods (jointSet, eqSetRough, gteSet, gtSet, ltSet, lteSet to name a few).

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.jointSetWithCallback(set1, set2, callback)"
  return_value: "Boolean result"
file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.superSet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 773
description: |
  Compares two sets and returns a result of true if every value in the given subset
  has a corresponding equal in the superset. Order of values within the sets is not enforced.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.superSet(superset, subset)"
  return_value: "Boolean result"
arguments:
 -
  name: superset
  types: [Array]
  description: >
    The value being asserted as a superset of the 'subset' argument.

 -
  name: subset
  types: [Array]
  description: >
    The value being asserted as a subset of the 'superset' argument.

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js

---
id: "Spah.SpahQL.DataHelper.truthySet"
parent_id: "Spah.SpahQL.DataHelper"
type: class method
line_number: 795
description: |
  Asserts that a set may be considered "truthy", i.e. containing one or more
  values that evaluate to true under javascript language rules.

signatures:
 -
  signature: "Spah.SpahQL.DataHelper.truthySet(set)"
  return_value: "Boolean result"
arguments:
 -
  name: set
  types: [Array]
  description: >
    The value being asserted as a "truthy" set.

file: /Users/danski/Sites/spah/src/Spah.SpahQL.DataHelper.js